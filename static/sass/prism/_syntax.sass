code

	// example `<!-- -->`, `/* */`, `//`
	.comment
		color: $comment

	// start language--html

	// example `<div></div>`
	.tag
		color: $html_tag_name // example <`div`></`div`>

		.punctuation
			color: $html_tag_angle_brackets // example `<`div`>`...`</`div`>`

	.attr-name
		color: $html_attribute_name // example <div `class`="block"></div>

	.attr-equals
		color: $html_attribute_equal_sign // example <div class`=`"block"></div>

		+ .punctuation,
		+ .punctuation + .punctuation
			color: $html_attribute_quotes

	.attr-value
		color: $html_attribute_value // example <div class="`block`"></div>

	.html-component
		color: $html_component_tag_name // example <`Btn`></`Btn`>

	// start language--javascript

	.keyword  // example `const`, 'let'
		color: $js_keyword

	.function
		color: $js_function_name // example `handleClick`(), const 'handleClick' = _ => {}

		+ .punctuation, // example function handleClick`(`) {}
		+ .punctuation + .punctuation // example function handleClick(`)` {}
			color: $js_function_parentheses

		+ .punctuation + .punctuation + .punctuation,
		+ .punctuation + .punctuation + .punctuation + .punctuation,
		+ .punctuation + .parameter + .operator // forEach(tag =>
			color: $js_function_curly_bracket

	.operator
		color: $js_function_curly_bracket !important

	.parameter
		color: $js_function_args

		.punctuation
			color: $text_base

	.function-variable
		color: $js_function_as_variable_name // example const 'handleClick' = _ => {}

		+ .operator
			color: $js_function_as_variable_equal_sign // example const handleClick `=` arg => {}

			+ .punctuation, // example const handleClick = `(`) => {}
			+ .punctuation + .punctuation, // example const handleClick = (`)` => {}

			+ .punctuation + .parameter + .punctuation // example const handleClick = (arg, arg2`)` => {}
				color: $js_function_parentheses

			+ .punctuation + .punctuation + .operator, // example const handleClick ``= () `=>`` {}
			+ .punctuation + .parameter + .punctuation + .operator, // example const handleClick ``= (arg, arg2) `=>`` {}
			+ .parameter + .operator // example const handleClick ``= arg `=>`` {}
				color: $js_function_as_variable_arrow

	.number
		color: $js_number

	.string
		color: $js_string

	.class-name // example class ClassName {}
		color: $js_class_name

	// start language--css

	&.language--css
		color: $css_property_value

		.punctuation
			color: $text_base
	
	.atrule .rule
		color: $css_rule

	.selector
		color: $css_selector
		
	.property
		color: $css_property
